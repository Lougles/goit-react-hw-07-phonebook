{"version":3,"sources":["Components/Container/Container.js","redux/contact/contact-actions.js","redux/contact/contact-operation.js","Components/ContactForm/ContactForm.js","redux/contact/contact-selectors.js","Components/Filter/Filter.js","Components/ContactList/ContactList.js","views/TodosView.js","Components/App/App.js","redux/contact/contact-reducer.js","redux/store.js","index.js"],"names":["Container","children","className","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","createContactRequest","createContactSuccess","createContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","addFilterValue","axios","defaults","baseURL","ContactForm","state","name","number","handleInput","e","target","value","setState","handleSubmit","preventDefault","props","onCreateContact","this","fetchContacts","onSubmit","type","onChange","Component","connect","dispatch","a","contact","post","data","createContact","get","getFilter","filter","getLoadind","loading","getFilteredContacts","createSelector","contacts","toLowerCase","includes","deleteContact","id","delete","onHandleChange","map","onClick","TodosView","App","createReducer","_","payload","item","Number","hendleError","response","clearError","error","combineReducers","store","configureStore","reducer","contactReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d77e9f57.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Container = ({ children }) =>\r\n  <div className=\"Container\">{children}</div>;\r\n\r\nexport default Container;","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nconst fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nconst fetchContactError = createAction('contacts/fetchContactError');\r\n\r\nconst createContactRequest = createAction('contacts/createContactRequest');\r\nconst createContactSuccess = createAction('contacts/createContactSuccess');\r\nconst createContactError = createAction('contacts/createContactError');\r\n\r\nconst deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nconst deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nconst deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nconst addFilterValue = createAction('contact/addFilterValue');\r\n\r\nexport {\r\n  addFilterValue,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  createContactRequest,\r\n  createContactSuccess,\r\n  createContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n};","import axios from 'axios';\r\nimport {\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  createContactRequest,\r\n  createContactSuccess,\r\n  createContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './contact-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nconst fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactRequest());\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n    dispatch(fetchContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactError(error));\r\n  }\r\n};\r\n\r\nconst createContact = ({ name, number }) => async dispatch => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n  dispatch(createContactRequest());\r\n  try {\r\n    const { data } = await axios.post('/contacts', contact);\r\n    dispatch(createContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(createContactError(error));\r\n  }\r\n};\r\n\r\nconst deleteContact = id => async dispatch => {\r\n  dispatch(deleteContactRequest());\r\n  try {\r\n    await axios.delete(`/contacts/${id}`);\r\n    dispatch(deleteContactSuccess(id));\r\n  } catch (error) {\r\n    dispatch(deleteContactError(error));\r\n  }\r\n};\r\n\r\nexport { fetchContacts, createContact, deleteContact };","  \r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {createContact, fetchContacts} from '../../redux/contact/contact-operation';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n  componentDidMount (){\r\n    this.props.fetchContacts();\r\n  }\r\n\r\n  handleInput = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onCreateContact(this.state);\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className=\"Searchbar\" onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Имя:\r\n          <input\r\n            className=\"SearchForm\"\r\n            name=\"name\"\r\n            type=\"text\"\r\n            onChange={this.handleInput}\r\n            value={name}\r\n          />\r\n        </label>\r\n        <label>\r\n          Номер:\r\n          <input\r\n            className=\"SearchForm\"\r\n            name=\"number\"\r\n            type=\"number\"\r\n            onChange={this.handleInput}\r\n            value={number}\r\n          />\r\n        </label>\r\n        <button className=\"Button\" type=\"submit\">Сохранить</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onCreateContact: ({ name, number }) =>\r\n    dispatch(createContact({ name, number })),\r\n  fetchContacts: () => dispatch(fetchContacts())\r\n  });\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getContacts = state => state.contact.contacts;\r\n\r\nconst getFilter = state => state.contact.filter;\r\n\r\nconst getLoadind = state => state.contact.loading;\r\n\r\nconst getError = state => state.contact.error;\r\n\r\nconst getFilteredContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) =>\r\n    contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    ),\r\n);\r\n\r\nexport { getContacts, getFilter, getLoadind, getError, getFilteredContacts };","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addFilterValue } from '../../redux/contact/contact-actions';\r\nimport { getError, getFilter } from '../../redux/contact/contact-selectors';\r\n\r\nconst Filter = ({ filter, addFilterValue }) => {\r\n  const onHandleChange = (e) => {\r\n    addFilterValue(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <label className=\"Searchbar\">\r\n      Поиск:\r\n          <br/> \r\n      <input\r\n        className=\"SearchForm-input\"\r\n        name=\"filter\"\r\n        type=\"text\"\r\n        onChange={onHandleChange}\r\n        value={filter}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  filter: getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addFilterValue: value => dispatch(addFilterValue(value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { deleteContact } from '../../redux/contact/contact-operation';\r\nimport { getError, getFilteredContacts, getLoadind} from '../../redux/contact/contact-selectors';\r\n\r\nconst ContactList = ({ contacts, deleteContact, loading }) => {\r\n  const onHandleChange = e => {\r\n    deleteContact(e.target.id);\r\n  };\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ name, id, number }) => (\r\n        <li key={id}>\r\n          <p>\r\n            {`Имя: ${name} | Номер: ${number}`}\r\n            <button className=\"Button\" id={id} type=\"button\" onClick={onHandleChange}>\r\n              Удалить\r\n            </button>\r\n          </p>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  deleteContact: id => dispatch(deleteContact(id)),\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: getFilteredContacts(state),\r\n  loading: getLoadind(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import React, { Component } from 'react';\r\nimport Container from '../Components/Container/Container';\r\nimport ContactForm from '../Components/ContactForm/ContactForm';\r\nimport Filter from '../Components/Filter/Filter';\r\nimport ContactList from '../Components/ContactList/ContactList';\r\n\r\n\r\nclass TodosView extends Component {\r\n  state = {\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <ContactForm />\r\n        <Filter />\r\n        <ContactList />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodosView;\r\n","import TodosView from '../../views/TodosView';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <TodosView />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addFilterValue,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  createContactRequest,\r\n  createContactSuccess,\r\n  createContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './contact-actions';\r\n\r\nconst contacts = createReducer([], {\r\n  [fetchContactSuccess]: (_, { payload }) => payload,\r\n  [createContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) => [\r\n    ...state.filter(item => item.id !== Number(payload)),\r\n  ],\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [addFilterValue]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactRequest]: () => true,\r\n  [fetchContactSuccess]: () => false,\r\n  [fetchContactError]: () => false,\r\n  [createContactRequest]: () => true,\r\n  [createContactSuccess]: () => false,\r\n  [createContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst hendleError = (_, { payload }) => payload.response.data;\r\nconst clearError = () => null;\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContactRequest]: clearError,\r\n  [fetchContactError]: hendleError,\r\n  [createContactRequest]: clearError,\r\n  [createContactError]: hendleError,\r\n  [deleteContactRequest]: clearError,\r\n  [deleteContactError]: hendleError,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n  loading,\r\n  error,\r\n});","import { configureStore } from '@reduxjs/toolkit';\r\nimport contactReducer from './contact/contact-reducer';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contact: contactReducer,\r\n  },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './Components/App/App';\nimport store from './redux/store';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);"],"sourceRoot":""}